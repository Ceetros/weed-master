// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Autentica o usuário e retorna tokens de acesso",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login com email e senha",
                "parameters": [
                    {
                        "description": "Credenciais",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Registra um novo usuário",
                "parameters": [
                    {
                        "description": "Dados do novo usuário",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição inválida",
                        "schema": {
                            "$ref": "#/definitions/Response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/Response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Enum.AccountTypeEnum": {
            "type": "string",
            "enum": [
                "USER",
                "CLINICAL"
            ],
            "x-enum-varnames": [
                "User",
                "Clinical"
            ]
        },
        "Enum.RoleEnum": {
            "type": "string",
            "enum": [
                "TUTOR",
                "MANAGER",
                "DOCTOR",
                "SECRETARY",
                "ADMIN"
            ],
            "x-enum-varnames": [
                "Tutor",
                "Manager",
                "Doctor",
                "Secretary",
                "Admin"
            ]
        },
        "Request.ClinicalData": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "pixKey": {
                    "type": "string"
                },
                "pixType": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "Request.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Request.RegisterRequest": {
            "type": "object",
            "required": [
                "birthDate",
                "document",
                "email",
                "name",
                "password"
            ],
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "clinical": {
                    "$ref": "#/definitions/Request.ClinicalData"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Enum.AccountTypeEnum"
                        }
                    ],
                    "example": "CLINICAL"
                }
            }
        },
        "Response.ClinicalInfo": {
            "type": "object",
            "properties": {
                "expired": {
                    "type": "boolean",
                    "example": false
                },
                "expiresIn": {
                    "type": "string",
                    "example": "2025-04-08T21:45:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe's Clinical Company'"
                }
            }
        },
        "Response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Usuário ou Senha inválidos"
                }
            }
        },
        "Response.LoginResponse": {
            "type": "object",
            "properties": {
                "clinical": {
                    "$ref": "#/definitions/Response.ClinicalInfo"
                },
                "token": {
                    "type": "string",
                    "example": "firebase-token"
                },
                "user": {
                    "$ref": "#/definitions/Response.UserInfo"
                }
            }
        },
        "Response.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Enum.RoleEnum"
                        }
                    ],
                    "example": "1"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Vet API",
	Description:      "API para gerenciamento de clínica veterinária",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
